version: '3.8'

services:
  flask-app:
    build:
      context: .
      dockerfile: resources/web/Dockerfile
    ports:
      - "5001:5001"
    environment:
      - MONGODB_URI=mongodb://mongo:27017/
      - PROJECT_HOME=/app
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongo
      - kafka
    volumes:
      - .:/app

  mongo:
    image: mongo:4.0
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db

  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghij1234567890abcdefg
    ports:
      - 9092:9092
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
  init-kafka:
    image: bitnami/kafka:3.9.0
    depends_on:
      - kafka
    entrypoint: ["/bin/bash", "-c"]
    command: >
      while ! kafka-topics.sh --bootstrap-server kafka:9092 --list > /dev/null 2>&1; do sleep 2; done &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic flight-delay-ml-request --partitions 1 --replication-factor 1 &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic flight-delay-ml-response --partitions 1 --replication-factor 1


  proxy:
    image: node:18-alpine
    container_name: proxy
    command: "node /client/proxy.js"
    ports:
      - "3000:3000"
    volumes:
      - ./client:/client


  spark-master:
    image: bitnami/spark:3.5.3
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
    ports:
      - "7077:7077"
      - "8086:8080"
    volumes:
      - /home/ibdn/practica_creativa-master/flight_prediction/target/scala-2.12/:/home/ibdn/practica_creativa-master/flight_prediction/target/scala-2.12
      - /home/ibdn/practica_creativa/models/:/home/ibdn/practica_creativa/models

  spark-worker-1:
    image: bitnami/spark:3.5.3
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8084:8081"
    volumes:
      - /home/ibdn/practica_creativa-master/flight_prediction/target/scala-2.12/:/home/ibdn/practica_creativa-master/flight_prediction/target/scala-2.12
      - /home/ibdn/practica_creativa/models/:/home/ibdn/practica_creativa/models


  spark-worker-2:
    image: bitnami/spark:3.5.3
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8085:8081"  # Worker 2, reuses same Spark UI port, mapped externally to 8082
    volumes:
      - /home/ibdn/practica_creativa-master/flight_prediction/target/scala-2.12/:/home/ibdn/practica_creativa-master/flight_prediction/target/scala-2.12
      - /home/ibdn/practica_creativa/models/:/home/ibdn/practica_creativa/models


  spark-submit:
    image: bitnami/spark:3.5.3
    container_name: spark-submit
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
      - proxy
    command: >
      spark-submit
        --packages org.mongodb.spark:mongo-spark-connector_2.12:10.4.1,org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.3
        --class es.upm.dit.ging.predictor.MakePrediction
        --master spark://spark-master:7077
        /app/target/flight_prediction_2.12-0.1.jar
    volumes:
      - /home/ibdn/practica_creativa/flight_prediction/target/scala-2.12/:/app/target
      - /home/ibdn/practica_creativa/models/:/home/ibdn/practica_creativa/models


volumes:
  kafka_data:

